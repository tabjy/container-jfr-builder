#!/bin/bash -e

set -x # enable echo

# restore build artifacts
DIRS=""

# restore maven cache (if exists)
if [ -d /tmp/artifacts/.m2 ]; then
    DIRS="/tmp/artifacts/.m2 $DIRS"
fi

# restore gradle cache (if exists)
if [ -d /tmp/artifacts/.gradle ]; then
    DIRS="/tmp/artifacts/.gradle $DIRS"
fi

# restore npm cache (if exists)
if [ -d /tmp/artifacts/.npm ]; then
    DIRS="/tmp/artifacts/.npm $DIRS"
fi

if [ -n "$DIRS" ]; then
    mv $DIRS $HOME
fi

pushd src

mv /tmp/src container-jfr

# jmc repo is not tagged
git clone --depth 1 https://github.com/openjdk/jmc.git

CLONE_OPTS=""
if [ -n "$CONTAINER_JMC_CORE_BRANCH" ]; then
    CLONE_OPTS="--branch $CONTAINER_JMC_CORE_BRANCH $CLONE_OPTS"
fi
git clone ${CLONE_OPTS} --depth 1 https://github.com/rh-jmc-team/container-jfr-core.git

pushd jmc

pushd releng/third-party
mvn p2:site
mvn jetty:run &
popd

pushd core
mvn install -DskipTests=true -Dspotbugs.skip=true
popd

mvn install -DskipTests=true -Dspotbugs.skip=true
kill $!
popd

pushd container-jfr-core
./gradlew build -x test 
popd

pushd container-jfr
./gradlew build -x test 

pushd web-client
npm install
popd

./gradlew copyWebClient

#mkdir -p ./build/distributions/
#curl localhost:8000/container-jfr.tar -o ./build/distributions/container-jfr.tar

tar xf ./build/distributions/container-jfr.tar
mv ./container-jfr/bin/* ${APP_ROOT}/bin/
mv ./container-jfr/lib/* ${APP_ROOT}/lib/
mv ./build/extra-directory/web-client ${APP_ROOT}/lib/web-client

popd

popd

rm -rf src/*